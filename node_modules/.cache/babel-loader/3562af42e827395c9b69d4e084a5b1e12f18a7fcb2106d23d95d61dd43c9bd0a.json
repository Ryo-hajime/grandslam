{"ast":null,"code":"var _jsxFileName = \"/Users/ryoichiyamada/\\u30D5\\u309A\\u30ED\\u30AF\\u3099\\u30E9\\u30DF\\u30F3\\u30AF\\u3099/grandslam/grandslam/src/ components/organisms/ChampionProfile.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { TextButton } from '../atoms/TextButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChampionProfile = props => {\n  const {\n    year,\n    tournament,\n    isHeld,\n    name,\n    country,\n    ahighlight,\n    image\n  } = props;\n  return /*#__PURE__*/_jsxDEV(ProfileWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileTextarea, {\n      children: [/*#__PURE__*/_jsxDEV(TournamentName, {\n        children: `${year}年　${tournament}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProfileName, {\n        children: [isHeld ? name : \"まだ開催されていません。\", country && /*#__PURE__*/_jsxDEV(ProfileCountry, {\n          children: `（${country}）`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), isHeld ? highlight && /*#__PURE__*/_jsxDEV(TextButton, {\n        href: ahighlight,\n        target: \"blank\",\n        children: \"\\u6C7A\\u52DD\\u6226\\u30CF\\u30A4\\u30E9\\u30A4\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(Winner, {\n        children: \"\\u8AB0\\u304C\\u512A\\u52DD\\u3059\\u308B\\u3068\\u601D\\u3044\\u307E\\u3059\\u304B\\uFF1F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 109\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProfileImage, {\n      src: isHeld ? image : \"images/dummy.jpg\",\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = ChampionProfile;\nconst ProfileWrapper = styled.div`\n    padding-top: 50px;\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: center;\n    max-width: 840px;\n    margin-left: auto;\n    margin-right: auto;\n    img{\n        aspect-ratio: 1;\n        object-fit: cover;\n        width: calc(45% - 50px);\n        padding-right: 50px;\n    }\n`;\n_c2 = ProfileWrapper;\nconst ProfileTextarea = styled.div`\n    width: 55%;\n    padding-top: 70px;\n`;\n_c3 = ProfileTextarea;\nconst TournamentName = styled.p`\n    font-size: 22px;\n    font-weight: bold;\n    padding-bottom: 15px;\n`;\n_c4 = TournamentName;\nconst ProfileName = styled.p`\n    font-size: 28px;\n    font-weight: bold;\n    padding-bottom: 30px;\n`;\n_c5 = ProfileName;\nconst ProfileCountry = styled.span``;\n_c6 = ProfileCountry;\nconst Winner = styled.p``;\n_c7 = Winner;\nconst ProfileImage = styled.img``;\n_c8 = ProfileImage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"ChampionProfile\");\n$RefreshReg$(_c2, \"ProfileWrapper\");\n$RefreshReg$(_c3, \"ProfileTextarea\");\n$RefreshReg$(_c4, \"TournamentName\");\n$RefreshReg$(_c5, \"ProfileName\");\n$RefreshReg$(_c6, \"ProfileCountry\");\n$RefreshReg$(_c7, \"Winner\");\n$RefreshReg$(_c8, \"ProfileImage\");","map":{"version":3,"names":["React","styled","TextButton","jsxDEV","_jsxDEV","ChampionProfile","props","year","tournament","isHeld","name","country","ahighlight","image","ProfileWrapper","children","ProfileTextarea","TournamentName","fileName","_jsxFileName","lineNumber","columnNumber","ProfileName","ProfileCountry","highlight","href","target","Winner","ProfileImage","src","alt","_c","div","_c2","_c3","p","_c4","_c5","span","_c6","_c7","img","_c8","$RefreshReg$"],"sources":["/Users/ryoichiyamada/プログラミング/grandslam/grandslam/src/ components/organisms/ChampionProfile.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { TextButton } from '../atoms/TextButton'\n\nexport const ChampionProfile = (props) => {\n    const {year, tournament, isHeld, name, country, ahighlight, image} = props\n    return (\n        <ProfileWrapper>\n            <ProfileTextarea>\n                <TournamentName>{`${year}年　${tournament}`}</TournamentName>\n                <ProfileName>\n                    {isHeld ? name : \"まだ開催されていません。\"}\n                    {country && <ProfileCountry>{`（${country}）`}</ProfileCountry>}\n                </ProfileName>\n                {isHeld ? highlight && <TextButton href={ahighlight} target='blank'>決勝戦ハイライト</TextButton> : <Winner>誰が優勝すると思いますか？</Winner>}\n            </ProfileTextarea>\n            <ProfileImage src={isHeld ? image : \"images/dummy.jpg\"} alt={name} />\n        </ProfileWrapper>\n    )\n}\n\nconst ProfileWrapper = styled.div`\n    padding-top: 50px;\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: center;\n    max-width: 840px;\n    margin-left: auto;\n    margin-right: auto;\n    img{\n        aspect-ratio: 1;\n        object-fit: cover;\n        width: calc(45% - 50px);\n        padding-right: 50px;\n    }\n`\n\nconst ProfileTextarea = styled.div`\n    width: 55%;\n    padding-top: 70px;\n`\n\nconst TournamentName = styled.p`\n    font-size: 22px;\n    font-weight: bold;\n    padding-bottom: 15px;\n`\n\nconst ProfileName = styled.p`\n    font-size: 28px;\n    font-weight: bold;\n    padding-bottom: 30px;\n`\nconst ProfileCountry = styled.span``\n\nconst Winner = styled.p``\n\nconst ProfileImage = styled.img``"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}