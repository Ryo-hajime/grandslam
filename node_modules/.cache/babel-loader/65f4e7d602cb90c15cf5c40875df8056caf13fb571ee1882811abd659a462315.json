{"ast":null,"code":"var _jsxFileName = \"/Users/ryoichiyamada/\\u30D5\\u309A\\u30ED\\u30AF\\u3099\\u30E9\\u30DF\\u30F3\\u30AF\\u3099/grandslam/grandslam/src/App.tsx\";\nimport React from 'react';\nimport { HeaderText } from './ components/atoms/HeaderText';\nimport { ChampionProfile } from './ components/organisms/ChampionProfile';\nimport { SelectArea } from './ components/organisms/SelectArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // const [champion, setChampion] = useState<gameChampionDataType>(GameChampionData[9]);\n  // const [selectedYear, setSelectedYear] = useState<yearType>(Year[9]);\n  // const [selectedTournament, setSelectedTournament] = useState<tournamentType>(Tournament[0]);\n\n  // const onChangeYear = (value: yearType) => setSelectedYear(value);  \n\n  // const onChangeTournament = (value: tournamentType) =>  setSelectedTournament(value);\n\n  // const onClickSearch = () => {\n  //   const newChampion = GameChampionData.filter(({year}) => year === selectedYear.value).find(({tournament}) => tournament === selectedTournament.value) || champion\n  //   setChampion(newChampion)\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderText, {\n      children: [\"\\u30B0\\u30E9\\u30F3\\u30C9\\u30B9\\u30E9\\u30E0\\u306E\\u512A\\u52DD\\u8005\\u3092\\u691C\\u7D22\\u3059\\u308B\\u30A2\\u30D7\\u30EA\\u3067\\u3059\\u3002\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), \"\\u958B\\u50AC\\u5E74\\u3068\\u5927\\u4F1A\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChampionProfile, {\n      year: champion.year,\n      tournament: champion.tournament,\n      isHeld: champion.isHeld,\n      name: champion.name,\n      country: champion.country,\n      highlight: champion.highlight,\n      imageSrc: champion.imageSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","HeaderText","ChampionProfile","SelectArea","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","fileName","_jsxFileName","lineNumber","columnNumber","year","champion","tournament","isHeld","name","country","highlight","imageSrc","_c","$RefreshReg$"],"sources":["/Users/ryoichiyamada/プログラミング/grandslam/grandslam/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { GameChampionData, gameChampionDataType } from './types/gameChampionData';\nimport { SearchButton } from './ components/atoms/SearchButton';\nimport { HeaderText } from './ components/atoms/HeaderText';\nimport { SelectOption } from './ components/molecules/SelectOption';\nimport { Year, yearType } from './types/year';\nimport { Tournament, tournamentType } from './types/tournament';\nimport { ChampionProfile } from './ components/organisms/ChampionProfile';\nimport { SelectArea } from './ components/organisms/SelectArea';\n\nconst App = () => {\n  \n  // const [champion, setChampion] = useState<gameChampionDataType>(GameChampionData[9]);\n  // const [selectedYear, setSelectedYear] = useState<yearType>(Year[9]);\n  // const [selectedTournament, setSelectedTournament] = useState<tournamentType>(Tournament[0]);\n  \n  // const onChangeYear = (value: yearType) => setSelectedYear(value);  \n  \n  // const onChangeTournament = (value: tournamentType) =>  setSelectedTournament(value);\n\n  // const onClickSearch = () => {\n  //   const newChampion = GameChampionData.filter(({year}) => year === selectedYear.value).find(({tournament}) => tournament === selectedTournament.value) || champion\n  //   setChampion(newChampion)\n  // };\n\n  return (\n    <>\n      <HeaderText>\n          グランドスラムの優勝者を検索するアプリです。\n          <br />開催年と大会を選択してください。\n      </HeaderText>\n      <SelectArea\n      />\n      {/* <div className=\"selectArea\">\n        <SelectOption\n          options={Year}\n          defaultValue={selectedYear}\n          onChange={onChangeYear}\n        >\n          開催年\n        </SelectOption>\n        <SelectOption\n          options={Tournament}\n          defaultValue={selectedTournament}\n          onChange={onChangeTournament}\n        >\n          大会\n        </SelectOption>\n        <SearchButton onClick={() => onClickSearch()}>検索する</SearchButton>\n      </div> */}\n      <ChampionProfile\n        year={champion.year}\n        tournament={champion.tournament}\n        isHeld={champion.isHeld}\n        name={champion.name}\n        country={champion.country}\n        highlight={champion.highlight}\n        imageSrc={champion.imageSrc}\n      />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AAGvC,SAASC,UAAU,QAAQ,gCAAgC;AAI3D,SAASC,eAAe,QAAQ,yCAAyC;AACzE,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAEhB;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA,CAACJ,UAAU;MAAAQ,QAAA,GAAC,sIAER,eAAAJ,OAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,oGACV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbR,OAAA,CAACF,UAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAkBFR,OAAA,CAACH,eAAe;MACdY,IAAI,EAAEC,QAAQ,CAACD,IAAK;MACpBE,UAAU,EAAED,QAAQ,CAACC,UAAW;MAChCC,MAAM,EAAEF,QAAQ,CAACE,MAAO;MACxBC,IAAI,EAAEH,QAAQ,CAACG,IAAK;MACpBC,OAAO,EAAEJ,QAAQ,CAACI,OAAQ;MAC1BC,SAAS,EAAEL,QAAQ,CAACK,SAAU;MAC9BC,QAAQ,EAAEN,QAAQ,CAACM;IAAS;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAAS,EAAA,GAnDKd,GAAG;AAqDT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}